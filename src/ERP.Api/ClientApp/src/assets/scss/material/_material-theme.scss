@use '@angular/material' as mat;
@use 'dark-theme' as dark;
@use '../helpers/palettes';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();


$my-light-primary: mat.define-palette(palettes.$my-softblue);
$my-light-accent: mat.define-palette(palettes.$my-kindaPink);
$angular-warn: mat.define-palette(mat.$red-palette); // The warn palette is optional (defaults to red).

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$light-theme: mat.define-light-theme((
  color: (
    primary: $my-light-primary,
    accent: $my-light-accent,
    warn: $angular-warn,
  )
));

@include mat.core-theme($light-theme);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($light-theme);


.dark-theme {
  // This mixin only generates the color styles now.
  @include mat.button-color(dark.$dark-theme);


}
